function _casethree(){return'case3';}function _casetwo(){return'case2';}function _caseone(){return'case1';}const test=_async(function(v){let _interrupt;function _messages(){return messages;}function _temp6(){messages.push('case3Start');return _await(wait(messages),_temp3);}function _temp5(){messages.push('case2Start');return _await(wait(messages),_temp2);}function _temp4(){messages.push('case1Start');return _await(wait(messages),_temp);}function _temp3(){messages.push('case3Stop');_interrupt=1;}function _temp2(){messages.push('case2Stop');}function _temp(){messages.push('case1Stop');_interrupt=1;}let messages=[];return _continue(_switch(v,[[_caseone,function(){messages.push('case1Start');return _await(wait(messages),_temp);}],[_casetwo,function(){messages.push('case2Start');return _await(wait(messages),_temp2);},_empty],[_casethree,function(){messages.push('case3Start');return _await(wait(messages),_temp3);}]]),function(){return messages;});});return Promise.all([test('case1'),test('case2'),test('case3')]);function wait(messages){messages.push('waitStart');return new Promise((resolve,reject)=>setTimeout(resolve,0)).then(()=>{messages.push('waitStop');});}