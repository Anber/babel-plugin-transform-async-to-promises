function(foo){try{let shouldContinue=true;let shouldContinueAsCall;shouldContinueAsCall=()=>shouldContinue;const _temp=_for(function(){return Promise.resolve(shouldContinueAsCall());},void 0,function(){return Promise.resolve(foo()).then(function(_foo){shouldContinue=_foo;});});return Promise.resolve(_temp&&_temp.then?_temp.then(function(){}):void 0);}catch(e){return Promise.reject(e);}}