function(count){try{let _exit=false;const sequence=function(until){return new _AsyncGenerator(function(_generator){return _catchInGenerator(function(){let i=0;const _temp2=_for(function(){return i<until;},function(){return i++;},function(){return _generator._yield(i).then(function(){});});if(_temp2&&_temp2.then)return _temp2.then(function(){});},function(){});});};let result=0;const _temp=_forAwaitOf(sequence(count),function(value){result+=value;if(result>10){_exit=true;return-1;}},function(){return _exit;});return Promise.resolve(_temp&&_temp.then?_temp.then(function(_result){return _exit?_result:result;}):_exit?_temp:result);}catch(e){return Promise.reject(e);}}