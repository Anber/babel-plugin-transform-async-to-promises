function(wait,messages){try{let _exit=false;function _temp2(_result){if(_exit)return _result;messages.push('after-try');return'result-after-try';}messages.push('before-try');const _temp=_catch(function(){messages.push('start-try');return Promise.resolve(wait(1)).then(function(){messages.push('stop-try');_exit=true;return'result-try';});},function(){messages.push('catch');});return Promise.resolve(_temp&&_temp.then?_temp.then(_temp2):_temp2(_temp));}catch(e){return Promise.reject(e);}}