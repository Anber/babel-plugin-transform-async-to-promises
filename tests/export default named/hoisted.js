function _temp9(){console.log(er);}function _temp8(){return _invokeIgnored(_temp7);}function _temp7(){if(true){return _invokeIgnored(_temp4);}else return _invokeIgnored(_temp6);}function _temp6(){if(res.status===204){data=null;}else{return _await(res.json(),_temp5);}}function _temp5(_res$json2){data=_res$json2;}function _temp4(){if('application/json'){return _await(res.json(),_temp);}else{return _continueIgnored(_catch(_res$text2,_temp3));}}function _temp3(berr){console.error(berr);}function _res$text2(){return _await(res.text(),_temp2);}function _temp2(_res$text){text=_res$text;}function _temp(_res$json){data=_res$json;}const fetch=_async(function(){return _continueIgnored(_catch(_temp8,_temp9));});export default fetch;